// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.2
// source: proto/subscription.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Subscription plan
type SubscriptionPlan struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ProductId     string                 `protobuf:"bytes,2,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	PlanName      string                 `protobuf:"bytes,3,opt,name=plan_name,json=planName,proto3" json:"plan_name,omitempty"`
	Duration      int32                  `protobuf:"varint,4,opt,name=duration,proto3" json:"duration,omitempty"` // number of days
	Price         float64                `protobuf:"fixed64,5,opt,name=price,proto3" json:"price,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscriptionPlan) Reset() {
	*x = SubscriptionPlan{}
	mi := &file_proto_subscription_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscriptionPlan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscriptionPlan) ProtoMessage() {}

func (x *SubscriptionPlan) ProtoReflect() protoreflect.Message {
	mi := &file_proto_subscription_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscriptionPlan.ProtoReflect.Descriptor instead.
func (*SubscriptionPlan) Descriptor() ([]byte, []int) {
	return file_proto_subscription_proto_rawDescGZIP(), []int{0}
}

func (x *SubscriptionPlan) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SubscriptionPlan) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *SubscriptionPlan) GetPlanName() string {
	if x != nil {
		return x.PlanName
	}
	return ""
}

func (x *SubscriptionPlan) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *SubscriptionPlan) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *SubscriptionPlan) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *SubscriptionPlan) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

// Request/Response messages for SubscriptionService
type CreateSubscriptionPlanRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProductId     string                 `protobuf:"bytes,1,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	PlanName      string                 `protobuf:"bytes,2,opt,name=plan_name,json=planName,proto3" json:"plan_name,omitempty"`
	Duration      int32                  `protobuf:"varint,3,opt,name=duration,proto3" json:"duration,omitempty"`
	Price         float64                `protobuf:"fixed64,4,opt,name=price,proto3" json:"price,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSubscriptionPlanRequest) Reset() {
	*x = CreateSubscriptionPlanRequest{}
	mi := &file_proto_subscription_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSubscriptionPlanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSubscriptionPlanRequest) ProtoMessage() {}

func (x *CreateSubscriptionPlanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_subscription_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSubscriptionPlanRequest.ProtoReflect.Descriptor instead.
func (*CreateSubscriptionPlanRequest) Descriptor() ([]byte, []int) {
	return file_proto_subscription_proto_rawDescGZIP(), []int{1}
}

func (x *CreateSubscriptionPlanRequest) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *CreateSubscriptionPlanRequest) GetPlanName() string {
	if x != nil {
		return x.PlanName
	}
	return ""
}

func (x *CreateSubscriptionPlanRequest) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *CreateSubscriptionPlanRequest) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

type CreateSubscriptionPlanResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Plan          *SubscriptionPlan      `protobuf:"bytes,1,opt,name=plan,proto3" json:"plan,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSubscriptionPlanResponse) Reset() {
	*x = CreateSubscriptionPlanResponse{}
	mi := &file_proto_subscription_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSubscriptionPlanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSubscriptionPlanResponse) ProtoMessage() {}

func (x *CreateSubscriptionPlanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_subscription_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSubscriptionPlanResponse.ProtoReflect.Descriptor instead.
func (*CreateSubscriptionPlanResponse) Descriptor() ([]byte, []int) {
	return file_proto_subscription_proto_rawDescGZIP(), []int{2}
}

func (x *CreateSubscriptionPlanResponse) GetPlan() *SubscriptionPlan {
	if x != nil {
		return x.Plan
	}
	return nil
}

type GetSubscriptionPlanRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSubscriptionPlanRequest) Reset() {
	*x = GetSubscriptionPlanRequest{}
	mi := &file_proto_subscription_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSubscriptionPlanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubscriptionPlanRequest) ProtoMessage() {}

func (x *GetSubscriptionPlanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_subscription_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubscriptionPlanRequest.ProtoReflect.Descriptor instead.
func (*GetSubscriptionPlanRequest) Descriptor() ([]byte, []int) {
	return file_proto_subscription_proto_rawDescGZIP(), []int{3}
}

func (x *GetSubscriptionPlanRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetSubscriptionPlanResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Plan          *SubscriptionPlan      `protobuf:"bytes,1,opt,name=plan,proto3" json:"plan,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSubscriptionPlanResponse) Reset() {
	*x = GetSubscriptionPlanResponse{}
	mi := &file_proto_subscription_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSubscriptionPlanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubscriptionPlanResponse) ProtoMessage() {}

func (x *GetSubscriptionPlanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_subscription_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubscriptionPlanResponse.ProtoReflect.Descriptor instead.
func (*GetSubscriptionPlanResponse) Descriptor() ([]byte, []int) {
	return file_proto_subscription_proto_rawDescGZIP(), []int{4}
}

func (x *GetSubscriptionPlanResponse) GetPlan() *SubscriptionPlan {
	if x != nil {
		return x.Plan
	}
	return nil
}

type UpdateSubscriptionPlanRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	PlanName      string                 `protobuf:"bytes,2,opt,name=plan_name,json=planName,proto3" json:"plan_name,omitempty"`
	Duration      int32                  `protobuf:"varint,3,opt,name=duration,proto3" json:"duration,omitempty"`
	Price         float64                `protobuf:"fixed64,4,opt,name=price,proto3" json:"price,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateSubscriptionPlanRequest) Reset() {
	*x = UpdateSubscriptionPlanRequest{}
	mi := &file_proto_subscription_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSubscriptionPlanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSubscriptionPlanRequest) ProtoMessage() {}

func (x *UpdateSubscriptionPlanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_subscription_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSubscriptionPlanRequest.ProtoReflect.Descriptor instead.
func (*UpdateSubscriptionPlanRequest) Descriptor() ([]byte, []int) {
	return file_proto_subscription_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateSubscriptionPlanRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateSubscriptionPlanRequest) GetPlanName() string {
	if x != nil {
		return x.PlanName
	}
	return ""
}

func (x *UpdateSubscriptionPlanRequest) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *UpdateSubscriptionPlanRequest) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

type UpdateSubscriptionPlanResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Plan          *SubscriptionPlan      `protobuf:"bytes,1,opt,name=plan,proto3" json:"plan,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateSubscriptionPlanResponse) Reset() {
	*x = UpdateSubscriptionPlanResponse{}
	mi := &file_proto_subscription_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSubscriptionPlanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSubscriptionPlanResponse) ProtoMessage() {}

func (x *UpdateSubscriptionPlanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_subscription_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSubscriptionPlanResponse.ProtoReflect.Descriptor instead.
func (*UpdateSubscriptionPlanResponse) Descriptor() ([]byte, []int) {
	return file_proto_subscription_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateSubscriptionPlanResponse) GetPlan() *SubscriptionPlan {
	if x != nil {
		return x.Plan
	}
	return nil
}

type DeleteSubscriptionPlanRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteSubscriptionPlanRequest) Reset() {
	*x = DeleteSubscriptionPlanRequest{}
	mi := &file_proto_subscription_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteSubscriptionPlanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSubscriptionPlanRequest) ProtoMessage() {}

func (x *DeleteSubscriptionPlanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_subscription_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSubscriptionPlanRequest.ProtoReflect.Descriptor instead.
func (*DeleteSubscriptionPlanRequest) Descriptor() ([]byte, []int) {
	return file_proto_subscription_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteSubscriptionPlanRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteSubscriptionPlanResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteSubscriptionPlanResponse) Reset() {
	*x = DeleteSubscriptionPlanResponse{}
	mi := &file_proto_subscription_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteSubscriptionPlanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSubscriptionPlanResponse) ProtoMessage() {}

func (x *DeleteSubscriptionPlanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_subscription_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSubscriptionPlanResponse.ProtoReflect.Descriptor instead.
func (*DeleteSubscriptionPlanResponse) Descriptor() ([]byte, []int) {
	return file_proto_subscription_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteSubscriptionPlanResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type ListSubscriptionPlansRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProductId     string                 `protobuf:"bytes,1,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	Page          int32                  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	PageSize      int32                  `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSubscriptionPlansRequest) Reset() {
	*x = ListSubscriptionPlansRequest{}
	mi := &file_proto_subscription_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSubscriptionPlansRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSubscriptionPlansRequest) ProtoMessage() {}

func (x *ListSubscriptionPlansRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_subscription_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSubscriptionPlansRequest.ProtoReflect.Descriptor instead.
func (*ListSubscriptionPlansRequest) Descriptor() ([]byte, []int) {
	return file_proto_subscription_proto_rawDescGZIP(), []int{9}
}

func (x *ListSubscriptionPlansRequest) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *ListSubscriptionPlansRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListSubscriptionPlansRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type ListSubscriptionPlansResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Plans         []*SubscriptionPlan    `protobuf:"bytes,1,rep,name=plans,proto3" json:"plans,omitempty"`
	Total         int64                  `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	Page          int32                  `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	PageSize      int32                  `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSubscriptionPlansResponse) Reset() {
	*x = ListSubscriptionPlansResponse{}
	mi := &file_proto_subscription_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSubscriptionPlansResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSubscriptionPlansResponse) ProtoMessage() {}

func (x *ListSubscriptionPlansResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_subscription_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSubscriptionPlansResponse.ProtoReflect.Descriptor instead.
func (*ListSubscriptionPlansResponse) Descriptor() ([]byte, []int) {
	return file_proto_subscription_proto_rawDescGZIP(), []int{10}
}

func (x *ListSubscriptionPlansResponse) GetPlans() []*SubscriptionPlan {
	if x != nil {
		return x.Plans
	}
	return nil
}

func (x *ListSubscriptionPlansResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListSubscriptionPlansResponse) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListSubscriptionPlansResponse) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

var File_proto_subscription_proto protoreflect.FileDescriptor

const file_proto_subscription_proto_rawDesc = "" +
	"\n" +
	"\x18proto/subscription.proto\x12\fsubscription\x1a\x1fgoogle/protobuf/timestamp.proto\"\x86\x02\n" +
	"\x10SubscriptionPlan\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1d\n" +
	"\n" +
	"product_id\x18\x02 \x01(\tR\tproductId\x12\x1b\n" +
	"\tplan_name\x18\x03 \x01(\tR\bplanName\x12\x1a\n" +
	"\bduration\x18\x04 \x01(\x05R\bduration\x12\x14\n" +
	"\x05price\x18\x05 \x01(\x01R\x05price\x129\n" +
	"\n" +
	"created_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\"\x8d\x01\n" +
	"\x1dCreateSubscriptionPlanRequest\x12\x1d\n" +
	"\n" +
	"product_id\x18\x01 \x01(\tR\tproductId\x12\x1b\n" +
	"\tplan_name\x18\x02 \x01(\tR\bplanName\x12\x1a\n" +
	"\bduration\x18\x03 \x01(\x05R\bduration\x12\x14\n" +
	"\x05price\x18\x04 \x01(\x01R\x05price\"T\n" +
	"\x1eCreateSubscriptionPlanResponse\x122\n" +
	"\x04plan\x18\x01 \x01(\v2\x1e.subscription.SubscriptionPlanR\x04plan\",\n" +
	"\x1aGetSubscriptionPlanRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"Q\n" +
	"\x1bGetSubscriptionPlanResponse\x122\n" +
	"\x04plan\x18\x01 \x01(\v2\x1e.subscription.SubscriptionPlanR\x04plan\"~\n" +
	"\x1dUpdateSubscriptionPlanRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1b\n" +
	"\tplan_name\x18\x02 \x01(\tR\bplanName\x12\x1a\n" +
	"\bduration\x18\x03 \x01(\x05R\bduration\x12\x14\n" +
	"\x05price\x18\x04 \x01(\x01R\x05price\"T\n" +
	"\x1eUpdateSubscriptionPlanResponse\x122\n" +
	"\x04plan\x18\x01 \x01(\v2\x1e.subscription.SubscriptionPlanR\x04plan\"/\n" +
	"\x1dDeleteSubscriptionPlanRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\":\n" +
	"\x1eDeleteSubscriptionPlanResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"n\n" +
	"\x1cListSubscriptionPlansRequest\x12\x1d\n" +
	"\n" +
	"product_id\x18\x01 \x01(\tR\tproductId\x12\x12\n" +
	"\x04page\x18\x02 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x03 \x01(\x05R\bpageSize\"\x9c\x01\n" +
	"\x1dListSubscriptionPlansResponse\x124\n" +
	"\x05plans\x18\x01 \x03(\v2\x1e.subscription.SubscriptionPlanR\x05plans\x12\x14\n" +
	"\x05total\x18\x02 \x01(\x03R\x05total\x12\x12\n" +
	"\x04page\x18\x03 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x04 \x01(\x05R\bpageSize2\xd2\x04\n" +
	"\x13SubscriptionService\x12s\n" +
	"\x16CreateSubscriptionPlan\x12+.subscription.CreateSubscriptionPlanRequest\x1a,.subscription.CreateSubscriptionPlanResponse\x12j\n" +
	"\x13GetSubscriptionPlan\x12(.subscription.GetSubscriptionPlanRequest\x1a).subscription.GetSubscriptionPlanResponse\x12s\n" +
	"\x16UpdateSubscriptionPlan\x12+.subscription.UpdateSubscriptionPlanRequest\x1a,.subscription.UpdateSubscriptionPlanResponse\x12s\n" +
	"\x16DeleteSubscriptionPlan\x12+.subscription.DeleteSubscriptionPlanRequest\x1a,.subscription.DeleteSubscriptionPlanResponse\x12p\n" +
	"\x15ListSubscriptionPlans\x12*.subscription.ListSubscriptionPlansRequest\x1a+.subscription.ListSubscriptionPlansResponseB4Z2github.com/youngprinnce/product-microservice/protob\x06proto3"

var (
	file_proto_subscription_proto_rawDescOnce sync.Once
	file_proto_subscription_proto_rawDescData []byte
)

func file_proto_subscription_proto_rawDescGZIP() []byte {
	file_proto_subscription_proto_rawDescOnce.Do(func() {
		file_proto_subscription_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_subscription_proto_rawDesc), len(file_proto_subscription_proto_rawDesc)))
	})
	return file_proto_subscription_proto_rawDescData
}

var file_proto_subscription_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_proto_subscription_proto_goTypes = []any{
	(*SubscriptionPlan)(nil),               // 0: subscription.SubscriptionPlan
	(*CreateSubscriptionPlanRequest)(nil),  // 1: subscription.CreateSubscriptionPlanRequest
	(*CreateSubscriptionPlanResponse)(nil), // 2: subscription.CreateSubscriptionPlanResponse
	(*GetSubscriptionPlanRequest)(nil),     // 3: subscription.GetSubscriptionPlanRequest
	(*GetSubscriptionPlanResponse)(nil),    // 4: subscription.GetSubscriptionPlanResponse
	(*UpdateSubscriptionPlanRequest)(nil),  // 5: subscription.UpdateSubscriptionPlanRequest
	(*UpdateSubscriptionPlanResponse)(nil), // 6: subscription.UpdateSubscriptionPlanResponse
	(*DeleteSubscriptionPlanRequest)(nil),  // 7: subscription.DeleteSubscriptionPlanRequest
	(*DeleteSubscriptionPlanResponse)(nil), // 8: subscription.DeleteSubscriptionPlanResponse
	(*ListSubscriptionPlansRequest)(nil),   // 9: subscription.ListSubscriptionPlansRequest
	(*ListSubscriptionPlansResponse)(nil),  // 10: subscription.ListSubscriptionPlansResponse
	(*timestamppb.Timestamp)(nil),          // 11: google.protobuf.Timestamp
}
var file_proto_subscription_proto_depIdxs = []int32{
	11, // 0: subscription.SubscriptionPlan.created_at:type_name -> google.protobuf.Timestamp
	11, // 1: subscription.SubscriptionPlan.updated_at:type_name -> google.protobuf.Timestamp
	0,  // 2: subscription.CreateSubscriptionPlanResponse.plan:type_name -> subscription.SubscriptionPlan
	0,  // 3: subscription.GetSubscriptionPlanResponse.plan:type_name -> subscription.SubscriptionPlan
	0,  // 4: subscription.UpdateSubscriptionPlanResponse.plan:type_name -> subscription.SubscriptionPlan
	0,  // 5: subscription.ListSubscriptionPlansResponse.plans:type_name -> subscription.SubscriptionPlan
	1,  // 6: subscription.SubscriptionService.CreateSubscriptionPlan:input_type -> subscription.CreateSubscriptionPlanRequest
	3,  // 7: subscription.SubscriptionService.GetSubscriptionPlan:input_type -> subscription.GetSubscriptionPlanRequest
	5,  // 8: subscription.SubscriptionService.UpdateSubscriptionPlan:input_type -> subscription.UpdateSubscriptionPlanRequest
	7,  // 9: subscription.SubscriptionService.DeleteSubscriptionPlan:input_type -> subscription.DeleteSubscriptionPlanRequest
	9,  // 10: subscription.SubscriptionService.ListSubscriptionPlans:input_type -> subscription.ListSubscriptionPlansRequest
	2,  // 11: subscription.SubscriptionService.CreateSubscriptionPlan:output_type -> subscription.CreateSubscriptionPlanResponse
	4,  // 12: subscription.SubscriptionService.GetSubscriptionPlan:output_type -> subscription.GetSubscriptionPlanResponse
	6,  // 13: subscription.SubscriptionService.UpdateSubscriptionPlan:output_type -> subscription.UpdateSubscriptionPlanResponse
	8,  // 14: subscription.SubscriptionService.DeleteSubscriptionPlan:output_type -> subscription.DeleteSubscriptionPlanResponse
	10, // 15: subscription.SubscriptionService.ListSubscriptionPlans:output_type -> subscription.ListSubscriptionPlansResponse
	11, // [11:16] is the sub-list for method output_type
	6,  // [6:11] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_proto_subscription_proto_init() }
func file_proto_subscription_proto_init() {
	if File_proto_subscription_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_subscription_proto_rawDesc), len(file_proto_subscription_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_subscription_proto_goTypes,
		DependencyIndexes: file_proto_subscription_proto_depIdxs,
		MessageInfos:      file_proto_subscription_proto_msgTypes,
	}.Build()
	File_proto_subscription_proto = out.File
	file_proto_subscription_proto_goTypes = nil
	file_proto_subscription_proto_depIdxs = nil
}
